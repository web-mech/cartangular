define(['core/Class','core/Event'],function( Class, Event ){
	var CartModel = Class.extend({
		activeClass:'active',
		init:function($scope){
			this.$scope = $scope;
			this.$scope.active = ''; //class name used for toggling the cart ui.
			this.$scope.list = []; //items in the cart.
			this.$scope.total = 0; // raw total value of items in the cart
			this.$scope.totalFormatted = this.$scope.total.format(2); //display of items in the cart.
			Event.listen('list.item',this.add.bind(this), this); //listen for items being selected from the listing controller.
		},
		/**
		 * Toggles the active class. This affects the behavior of the cart opening and closing.
		 */
		toggleActive:function(){
			this.$scope.active = this.$scope.active == '' ? this.activeClass : '';
			Event.notify('cart.clicked',this,{}); //notify listeners that the car button has been clicked, so they can respond accordingly.
		},
		/**
		 * Locate the index of an item by the $$hashKey property generated by angular.
		 */
		indexOf:function(item){
			for(var i =0;i<this.$scope.list.length; i++){
				if(item.$$hashKey == this.$scope.list[i].$$hashKey)
					return i;
			}
			return -1;
		},
		/**
		 * Calculate the total value of all of the items in the list array
 		 */
		calculateTotal:function(){
			this.$scope.total = 0;

			for(var i =0;i<this.$scope.list.length; i++){
				this.$scope.total += parseFloat(this.$scope.list[i].price.substr(1));
			}

			this.$scope.totalFormatted = this.$scope.total.format(2);
		},
		/**
		 * Add an item to the list array then calculate the total value.
		 */
		add:function(event,context,item){
			if(this.indexOf(item) < 0){
				this.$scope.list.push(item);
				this.calculateTotal();
			}
		},
		/**
		 * Remove an item from the list array then calculate the total value.
		 */
		remove:function(item){
			var itemIndex = this.indexOf(item);
			if(itemIndex < 0)
				return false;

			this.$scope.list.splice(itemIndex,1);
			this.calculateTotal();
		}
	});

	return CartModel;
});